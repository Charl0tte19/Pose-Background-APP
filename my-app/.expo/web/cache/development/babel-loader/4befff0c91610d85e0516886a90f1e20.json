{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\app\\\\my-app\\\\sevenpage.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar ZoomView = function (_Component) {\n  _inherits(ZoomView, _Component);\n\n  var _super = _createSuper(ZoomView);\n\n  function ZoomView(props) {\n    var _this;\n\n    _classCallCheck(this, ZoomView);\n\n    _this = _super.call(this, props);\n    _this._panResponder = PanResponder.create({\n      onPanResponderMove: function onPanResponderMove(e, _ref) {\n        var dy = _ref.dy;\n\n        var _Dimensions$get = Dimensions.get(\"window\"),\n            windowHeight = _Dimensions$get.height;\n\n        return _this.props.onZoomProgress(Math.min(Math.max(dy * -1 / windowHeight, 0), 0.5));\n      },\n      onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(ev, _ref2) {\n        var dx = _ref2.dx;\n        return dx !== 0;\n      },\n      onPanResponderGrant: function onPanResponderGrant() {\n        return _this.props.onZoomStart();\n      },\n      onPanResponderRelease: function onPanResponderRelease() {\n        return _this.props.onZoomEnd();\n      }\n    });\n    return _this;\n  }\n\n  _createClass(ZoomView, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, _extends({\n        style: {\n          flex: 1,\n          width: \"100%\"\n        }\n      }, this._panResponder.panHandlers, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }\n      }), this.props.children);\n    }\n  }]);\n\n  return ZoomView;\n}(Component);","map":{"version":3,"sources":["D:/app/my-app/sevenpage.js"],"names":["React","Component","ZoomView","props","_panResponder","PanResponder","create","onPanResponderMove","e","dy","Dimensions","get","windowHeight","height","onZoomProgress","Math","min","max","onMoveShouldSetPanResponder","ev","dx","onPanResponderGrant","onZoomStart","onPanResponderRelease","onZoomEnd","flex","width","panHandlers","children"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;IAGMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,aAAL,GAAqBC,YAAY,CAACC,MAAb,CAAoB;AACvCC,MAAAA,kBAAkB,EAAE,4BAACC,CAAD,QAAe;AAAA,YAATC,EAAS,QAATA,EAAS;;AAAA,8BACAC,UAAU,CAACC,GAAX,UADA;AAAA,YACjBC,YADiB,mBACzBC,MADyB;;AAEjC,eAAO,MAAKV,KAAL,CAAWW,cAAX,CACLC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASR,EAAE,GAAG,CAAC,CAAN,GAAUG,YAAnB,EAAiC,CAAjC,CAAT,EAA8C,GAA9C,CADK,CAAP;AAGD,OANsC;AAOvCM,MAAAA,2BAA2B,EAAE,qCAACC,EAAD,SAAgB;AAAA,YAATC,EAAS,SAATA,EAAS;AAC3C,eAAOA,EAAE,KAAK,CAAd;AACD,OATsC;AAUvCC,MAAAA,mBAAmB,EAAE,+BAAM;AACzB,eAAO,MAAKlB,KAAL,CAAWmB,WAAX,EAAP;AACD,OAZsC;AAavCC,MAAAA,qBAAqB,EAAE,iCAAM;AAC3B,eAAO,MAAKpB,KAAL,CAAWqB,SAAX,EAAP;AACD;AAfsC,KAApB,CAArB;AAFiB;AAmBlB;;;;6BACQ;AACP,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,KAAK;AAAhB;AADT,SAEM,KAAKtB,aAAL,CAAmBuB,WAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIG,KAAKxB,KAAL,CAAWyB,QAJd,CADF;AAQD;;;;EA9BoB3B,S","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, PanResponder, Dimensions } from \"react-native\";\r\n\r\nclass ZoomView extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this._panResponder = PanResponder.create({\r\n      onPanResponderMove: (e, { dy }) => {\r\n        const { height: windowHeight } = Dimensions.get(`window`)\r\n        return this.props.onZoomProgress(\r\n          Math.min(Math.max(dy * -1 / windowHeight, 0), 0.5),\r\n        )\r\n      },\r\n      onMoveShouldSetPanResponder: (ev, { dx }) => {\r\n        return dx !== 0\r\n      },\r\n      onPanResponderGrant: () => {\r\n        return this.props.onZoomStart()\r\n      },\r\n      onPanResponderRelease: () => {\r\n        return this.props.onZoomEnd()\r\n      },\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <View\r\n        style={{ flex: 1, width: `100%` }}\r\n        {...this._panResponder.panHandlers}\r\n      >\r\n        {this.props.children}\r\n      </View>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}